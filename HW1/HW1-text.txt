Conceptual Questions


1. What does CRUD stand for?

CURD stands for create, read, update, and delete.

2. What are the System Databases?

3. What is OLAP and OLTP?

OLTP stands for Online Transaction Processing. It is

OLAP stands for Online Analytical Processing. It can be very large compare to OLTP. Usually it stores a lot of historical data or data that is not updated/used frequently.

4. What is the difference between DDL vs. DML?

5.What does the “Like” keyword do?

Like operator create a search expression to find the rows that match the rules. It can be used with wildcards to match certain characters/patterns.
6. List the wildcards available for the Like Operator.
    1. %: matches 0 or more characters
    2. _: matches exactly one character
    3. []: mateches any character in the brackets
    4. ^: mataches any character not in the brackets
    5. -: matches any character in the range of two characters.


7. What's the difference between left join and inner
join?

Inner join only retuerns the row that matches the condition, and left join returns all the rows that match the condition plus rows in the left database that don't match the condition.



Write queries for following scenarios - Using AdventureWorks Database


1. Write a query that retrieves the columns ProductID, Name, Color and ListPrice from the Production.Product table, with no filter. 

SELECT ProductID, Name, Color, ListPrice FROM Production.Product

2. Write a query that retrieves the
columns ProductID, Name, Color and ListPrice from the Production.Product table,

excluding the rows that ListPrice is 0.

SELECT ProductID, Name, Color, ListPrice 
FROM Production.Product
WHERE ListPrice != 0 

3. Write a query that retrieves the columns ProductID, Name,
Color and ListPrice from the Production.Product table, the rows that are not NULL for the Color column.

SELECT ProductID, Name, Color, ListPrice 
FROM Production.Product
WHERE Color IS NOT NULL

4. Write a query that retrieves the columns ProductID, Name,
Color and ListPrice from the Production.Product table, the rows that are not NULL for the column Color, and the column ListPrice has a value greater than zero.

SELECT ProductID, Name, Color, ListPrice 
FROM Production.Product
WHERE Color IS NOT NULL AND ListPrice > 0

5. Write a query that concatenates the columns Name and Color
from the Production.Product table by excluding the rows that are null for color.

SELECT Name + ' ' + Color as NAMECOLOR
FROM Production.Product
WHERE Color IS NOT NULL


6. Write a query that generates the following result set from
Production.Product:


NAME: LL Crankarm  --  COLOR: Black


NAME: ML Crankarm  --  COLOR: Black


NAME: HL Crankarm  --  COLOR: Black


NAME: Chainring Bolts  --  COLOR: Silver


NAME: Chainring Nut  --  COLOR: Silver


NAME: Chainring  --  COLOR: Black

select Name, Color 
from Production.Product
WHERE Name LIKE '%Crankarm%' OR Name LIKE 'Chainring%' AND Color IN ('Black', 'Silver')

7. Write a query to retrieve the to the columns ProductID and Name from the Production.Product table filtered by ProductID from 400 to 500 using between

SELECT ProductID, Name
FROM Production.Product
WHERE ProductID >= 400 AND ProductID <= 500

8. Write a query to retrieve the to the columns  ProductID,
Name and color from the Production.Product table restricted to the colors black and blue

SELECT ProductID, Name, Color
FROM Production.Product
WHERE Color IN ('Black', 'Blue')

9. Write a query to get a result set on products that begins
with the letter S. 

select * from Production.Product
WHERE Name like 'S%'

10. Write a query that retrieves the columns Name and ListPrice
from the Production.Product table. Your result set should look something like the following. Order the result set by the Name column. The products name should start with either 'A' or 'S'


Name                                            ListPrice


Adjustable Race                                   0,00


All-Purpose Bike Stand                       159,00


AWC Logo Cap                                      8,99


Seat Lug                                          0,00


Seat Post                                         0,00

SELECT Name, ListPrice
FROM Production.Product
WHERE Name like 'S%' OR Name like 'A%'
ORDER BY Name ASC 
OFFSET 0 ROWS FETCH NEXT 5 ROW ONLY

11. Write a query so you retrieve rows
that have a Name that begins with the letters SPO, but is then not followed by the letter K. After this zero or more letters can exists. Order the result set by the Name column.

select * from Production.Product
WHERE Name like 'SPO[^K]%'
ORDER BY Name ASC 

12. Write a query that retrieves the unique combination of
columns ProductSubcategoryID and Color from the Production.Product table. We do not want any rows that are NULL.in any of the two columns in the result. (Hint: Use IsNull)

SELECT distinct ISNULL(ProductSubcategoryID, 0) [ProductSubcategoryID] , ISNULL(Color, 'N/A') [Color] 
from Production.Product 